name: Build & deploy

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  api:
    name: Build & deploy API
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        cache: false

    - name: Install dependencies
      run: go get ./...

    - name: Build
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -o ./build/ ./cmd/api/...

    - name: SSH Remote Commands
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ vars.HOST }}
        username: ${{ vars.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          mkdir -p /var/www/stock-scout/api
          rsync -azh --delay-updates --stats ${{ github.workspace }}/build/ ${{ vars.TARGET }}

  frontend:
    name: Build & deploy frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Setup npm
        run: npm install -g npm@latest

      - name: Install Dependencies
        run: cd frontend && npm ci

      - name: Build SvelteKit
        run: cd frontend && npm run build

      - name: Upload to BunnyCDN
        uses: ayeressian/bunnycdn-storage-deploy@v2.4.0
        with:
          source: "frontend/build"
          storageEndpoint: "${{ vars.STORAGE_ENDPOINT }}"
          storageZoneName: "${{ vars.STORAGE_NAME }}"
          storagePassword: "${{ secrets.STORAGE_PASSWORD }}"
          accessKey: "${{ secrets.STORAGE_KEY }}"
          pullZoneId: "${{ vars.ZONE_ID }}"
          upload: "true"
          remove: "true"
          purgePullZone: "true"